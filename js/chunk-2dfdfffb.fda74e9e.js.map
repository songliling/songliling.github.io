{"version":3,"sources":["webpack:///./node_modules/ethereum-checksum-address/index.js","webpack:///./node_modules/keccak256/dist/index.js","webpack:///./src/contactLogic/manage/index.js"],"names":["keccak256","toChecksumAddress","address","chainId","test","Error","stripAddress","stripHexPrefix","toLowerCase","prefix","toString","keccakHash","replace","checksumAddress","i","length","parseInt","toUpperCase","checkAddressChecksum","output","value","slice","module","exports","_typeof","Symbol","iterator","obj","constructor","prototype","createKeccakHash","BN","a","toBuffer","update","digest","v","Buffer","isBuffer","Array","isArray","from","isHexString","padToEven","intToBuffer","undefined","allocUnsafe","isBN","toArrayLike","toArray","match","str","isHexPrefixed","hex","intToHex","window","adminUrl","artistUrl","baseApi","method","url","data","axios","post","headers","result","get","status","createProject","params","fetchAuditList","res","ntf_projects","map","item","createdAt","CreatedAt","deletedAt","DeletedAt","id","ID","updatedAt","UpdatedAt","iscode","projectArtist","project_artist","projectArtistAddress","project_artist_address","projectBaseURI","project_base_uri","projectdescription","project_description","projectLicense","project_license","projectMintPrice","project_mint_price","projectName","project_name","projectWebsite","project_website","fetchAddArtProject","web3","library","account","chainID","pricePerTokenInWei","utils","toWei","artistAddress","addProject","fetchbindArtAddress","nextProjectID","projectId","updateProjectArtistAddress","fetchVipList","fetchEnableProjectToVip","toggleProjectPassportMint","fetchBindProjectToVip","passportProjectId","console","log","updateProjectPassportProjectId","fetchProjectList","all","projects","laods","forEach","p","project_id","push","ProjectDetails","Promise","projectsData","tokenInfoLaods","ProjectTokenInfo","tokenInfoData","row","index","artist","description","website","license","dynamic","tokenInfo","project","active","fetchUpdateProjectContent","type","content","commonParams","updateProjectName","reuslt","updateProjectArtistName","projectArtistName","updateProjectDescription","projectDescription","updateProjectWebsite","updateProjectLicense","updateProjectMaxInvocations","maxInvocations","updateProjectPricePerTokenInWei","fetchSaveProjectScript","tokenId","scriptContent","scriptId","script","request","code","signature","fetchScriptInfo","fetchProjectActive","toggleProjectActive","updateProjectbaseURI","updateProjectBaseURI","fetchProjectPaused","toggleProjectPaused","fetchProjectDetail","projectDetail","ProjectStatus","StatusInfo","paused","locked","invocations","additionalPayee","additionalPayeePercentage","fromWei","fetchUpdateProfile"],"mappings":"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","file":"js/chunk-2dfdfffb.fda74e9e.js","sourcesContent":["const keccak256 = require('keccak256')\n\nfunction toChecksumAddress (address, chainId = null) {\n  if (typeof address !== 'string') {\n    return ''\n  }\n\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    throw new Error(`Given address \"${address}\" is not a valid Ethereum address.`)\n  }\n\n  const stripAddress = stripHexPrefix(address).toLowerCase()\n  const prefix = chainId != null ? chainId.toString() + '0x' : ''\n  const keccakHash = keccak256(prefix + stripAddress)\n    .toString('hex')\n    .replace(/^0x/i, '')\n  let checksumAddress = '0x'\n\n  for (let i = 0; i < stripAddress.length; i++) {\n    checksumAddress += parseInt(keccakHash[i], 16) >= 8 ? stripAddress[i].toUpperCase() : stripAddress[i]\n  }\n\n  return checksumAddress\n}\n\nfunction checkAddressChecksum (address, chainId = null) {\n  const stripAddress = stripHexPrefix(address).toLowerCase()\n  const prefix = chainId != null ? chainId.toString() + '0x' : ''\n  const keccakHash = keccak256(prefix + stripAddress)\n    .toString('hex')\n    .replace(/^0x/i, '')\n\n  for (let i = 0; i < stripAddress.length; i++) {\n    let output = parseInt(keccakHash[i], 16) >= 8 ? stripAddress[i].toUpperCase() : stripAddress[i]\n    if (stripHexPrefix(address)[i] !== output) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction stripHexPrefix (value) {\n  return value.slice(0, 2) === '0x' ? value.slice(2) : value\n}\n\nmodule.exports = {\n  toChecksumAddress,\n  checkAddressChecksum\n}\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar createKeccakHash = require('keccak');\nvar BN = require('bn.js');\n\nfunction keccak256(a) {\n  a = toBuffer(a);\n\n  return createKeccakHash('keccak256').update(a).digest();\n}\n\nfunction toBuffer(v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (isHexString(v)) {\n        v = Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n  return v;\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('while padding to even, value must be string, is currently ' + (typeof a === 'undefined' ? 'undefined' : _typeof(a)) + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\nfunction stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n\nfunction isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"value must be type 'string', is currently type \" + (typeof str === 'undefined' ? 'undefined' : _typeof(str)) + ', while checking isHexPrefixed.');\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return Buffer.from(padToEven(hex.slice(2)), 'hex');\n}\n\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\nif (typeof window !== 'undefined') {\n  window.keccak256 = keccak256;\n}\n\nmodule.exports = keccak256;","import axios from 'axios';\nimport { toChecksumAddress } from 'ethereum-checksum-address';\nimport config from '@/config/config.js';\nimport {\n    addProject,\n    updateProjectArtistAddress,\n    ProjectDetails,\n    ProjectTokenInfo,\n    updateProjectName,\n    updateProjectArtistName,\n    updateProjectDescription,\n    updateProjectWebsite,\n    updateProjectLicense,\n    updateProjectMaxInvocations,\n    updateProjectPricePerTokenInWei,\n    addProjectScript,\n    updateProjectScript,\n    projectScriptByIndex,\n    ProjectStatus,\n    toggleProjectPaused,\n    toggleProjectActive,\n    updateProjectBaseURI,\n    projectURIInfo,\n    toggleProjectPassportMint,\n    updateProjectPassportProjectId,\n} from '../GenArt';\n\n\n// const baseUrl = 'http://59.110.68.178:8004';\nconst adminUrl = ''; //config.adminRequestBaseUrl;\nconst artistUrl = ''; //config.artistRequestBaseUrl;\n\nconst baseApi = async({ method, url, data }) => {\n    let result;\n    if (method === 'POST') {\n        result = await axios.post(url, data, {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n                'accept': 'application/json'\n            }\n        });\n    } else {\n        result = await axios.get(url);\n    }\n\n    if (result.status === 200) {\n        return 'data' in result ? result.data : result;\n    }\n\n};\n\nexport const createProject = async(params) => {\n    const data = await baseApi({\n        method: 'POST',\n        url: `/api/audit/addProject`,\n        data: params\n    });\n\n    return data;\n};\n\nexport const fetchAuditList = async() => {\n    const res = await baseApi({\n        method: 'GET',\n        url: `${adminUrl}/api/audit/listProjects?pageNum=1&showNum=100`\n    });\n\n    return res.data.ntf_projects.map(item => ({\n        createdAt: item.CreatedAt,\n        deletedAt: item.DeletedAt,\n        id: item.ID,\n        updatedAt: item.UpdatedAt,\n        iscode: item.iscode,\n        projectArtist: item.project_artist,\n        projectArtistAddress: item.project_artist_address,\n        projectBaseURI: item.project_base_uri,\n        projectdescription: item.project_description,\n        projectLicense: item.project_license,\n        projectMintPrice: item.project_mint_price,\n        projectName: item.project_name,\n        projectWebsite: item.project_website,\n    }));\n};\n\n/**\n * 添加项目\n *\n * */\nexport const fetchAddArtProject = async({ web3, library, account, chainID, projectName, projectArtistAddress, projectMintPrice, iscode }) => {\n    const pricePerTokenInWei = web3.utils.toWei(projectMintPrice.toString());\n    const params = {\n        library,\n        account,\n        chainID,\n        projectName,\n        artistAddress: projectArtistAddress,\n        pricePerTokenInWei,\n        iscode: !!iscode,\n    };\n    return await addProject(params);\n};\n\n\n/**\n * 绑定艺术家地址\n *\n * */\nexport const fetchbindArtAddress = async({ web3, library, account, chainID, nextProjectID, projectArtistAddress }) => {\n    const projectId = nextProjectID.toString();\n\n    const params = {\n        library,\n        account,\n        chainID,\n        projectId,\n        artistAddress: projectArtistAddress,\n    };\n    return await updateProjectArtistAddress(params);\n};\n\n/**\n * 查询会员卡项目\n * */\n\nexport const fetchVipList = async () => {\n  const res = await baseApi({\n    method: 'GET',\n    url: `${artistUrl}/api/audit/listProjects?vip=true`\n  });\n  return res.data.ntf_projects;\n};\n\n/**\n * 启用会员卡项目\n * */\n\nexport const fetchEnableProjectToVip = async ({library, account, chainID, projectId}) => {\n  const res = await toggleProjectPassportMint({library, account, chainID, projectId: projectId.toString()});\n  return res;\n};\n\n/**\n * 将项目绑定到会员卡项目\n * */\nexport const fetchBindProjectToVip = async ({library, account, chainID, projectId, passportProjectId}) => {\n  console.log(library, account, chainID, projectId, passportProjectId, 555);\n  const res = await updateProjectPassportProjectId({library, account, chainID, projectId, passportProjectId});\n  return res;\n};\n\n/**\n * 已上链列表\n * */\n\nexport const fetchProjectList = async({ web3, library, account, chainID, all }) => {\n\n  const res = await baseApi({\n    method: 'GET',\n    url: `${artistUrl}/api/listProjects?pageNum=1&showNum=100${all ? '' : `&artistAddress=${account}`}`\n  });\n\n  const { projects } = res.data;\n  const laods = [];\n  projects.forEach(p => {\n    const projectId = p.project_id.toString();\n    laods.push(ProjectDetails({library, account, chainID, projectId}));\n  });\n  let projectsData = await Promise.all(laods);\n\n  const tokenInfoLaods = [];\n  projects.forEach(p => {\n    const projectId = p.project_id.toString();\n    tokenInfoLaods.push(ProjectTokenInfo({library, account, chainID, projectId}));\n  });\n  const tokenInfoData = await Promise.all(tokenInfoLaods);\n\n  // const scriptInfoLaods = [];\n  // projects.forEach(p => {\n  //   const projectId = p.project_id.toString();\n  //   scriptInfoLaods.push(ProjectScriptInfo({library, account, chainID, projectId}));\n  // });\n  // const scriptInfoData = await Promise.all(scriptInfoLaods);\n\n\n  projectsData = projectsData.map((row, index) => {\n    const [projectName, artist, description, website, license, dynamic] = row;\n    const tokenInfo = tokenInfoData[index];\n    // const scriptInfo = scriptInfoData[index];\n    // console.log(row, tokenInfo, scriptInfo);\n    const project = projects[index];\n\n    return {\n      ...project,\n      projectName,\n      artist,\n      description,\n      website,\n      license,\n      dynamic,\n      active: tokenInfo[4],\n      // paused: scriptInfo[5],\n      // locked: scriptInfo[4],\n    };\n  });\n\n  return projectsData;\n};\n\n\n/**\n * fetchProjectNameSave\n * */\n\n/**\n * 更新Project Name\n *\n * */\nexport const fetchUpdateProjectContent = async ({web3, library, account, chainID, projectId, type, content}) => {\n  const commonParams = {\n    library,\n    account,\n    chainID,\n    projectId,\n  };\n\n  let reuslt;\n  switch (type) {\n    case 'projectName':\n      reuslt = await updateProjectName({\n        ...commonParams,\n        projectName: content.toString(),\n      });\n      break;\n    case 'projectArtistName':\n      reuslt = await updateProjectArtistName({\n        ...commonParams,\n        projectArtistName: content.toString(),\n      });\n      break;\n    case 'projectDescription':\n      reuslt = await updateProjectDescription({\n        ...commonParams,\n        projectDescription: content.toString(),\n      });\n      break;\n    case 'projectWebsite':\n      reuslt = await updateProjectWebsite({\n        ...commonParams,\n        projectWebsite: content.toString(),\n      });\n      break;\n    case 'projectLicense':\n      reuslt = await updateProjectLicense({\n        ...commonParams,\n        projectLicense: content.toString(),\n      });\n      break;\n    case 'maxInvocations':\n      reuslt = await updateProjectMaxInvocations({\n        ...commonParams,\n        maxInvocations: content.toString(),\n      });\n      break;\n    case 'mintPrice':\n      reuslt = await updateProjectPricePerTokenInWei({\n        ...commonParams,\n        pricePerTokenInWei: web3.utils.toWei(content.toString()),\n      });\n      break;\n  }\n\n  return reuslt;\n};\n\n/**\n * 上传Script到链\n *\n * */\nexport const fetchSaveProjectScript = async ({web3, library, account, chainID, projectId, tokenId, scriptContent, scriptId, type}) => {\n\n  const params = {\n    library,\n    account,\n    chainID,\n    projectId,\n    script: scriptContent,\n  };\n  let result;\n  // if(type === 'add') {\n    result = await axios.post('/api/audit/uploadCode', {\n      request: {\n        address: tokenId,\n        project_id: projectId,\n        code: scriptContent,\n      },\n      signature: 'test-sign'\n    });\n    // result = await addProjectScript(params);\n\n  // } else {\n  //   result = await updateProjectScript({\n  //     ...params,\n  //     scriptId,\n  //   });\n  // }\n  return result.data;\n};\n\n/**\n * 获取链上的Script\n *\n * */\nexport const fetchProjectScript = async ({web3, library, account, chainID, projectId, index}) => {\n  const params = {\n    library,\n    account,\n    chainID,\n    projectId,\n    index,\n  };\n  return await projectScriptByIndex(params);\n};\n\n\n/**\n * 获取链上的script info\n *\n * */\nexport const fetchScriptInfo = async ({web3, library, account, chainID, projectId}) => {\n  const result = await axios.get(`/api/audit/getCode/${projectId}`);\n  return result.data.data;\n\n  // const params = {\n  //   library,\n  //   account,\n  //   chainID,\n  //   projectId,\n  // };\n  // return await ProjectScriptInfo(params);\n};\n\n/**\n * Project Active\n *\n * */\nexport const fetchProjectActive = async ({web3, library, account, chainID, projectId}) => {\n  const params = {\n    library,\n    account,\n    chainID,\n    projectId,\n  };\n  return await toggleProjectActive(params);\n};\n\nexport const updateProjectbaseURI = async ({web3, library, account, chainID, projectId}) => {\n  const params = {\n    library,\n    account,\n    chainID,\n    projectId,\n  };\n  return await updateProjectBaseURI(params);\n};\n\n/**\n * Project Paused\n *\n * */\nexport const fetchProjectPaused = async ({web3, library, account, chainID, projectId}) => {\n  const params = {\n    library,\n    account,\n    chainID,\n    projectId,\n  };\n  return await toggleProjectPaused(params);\n};\n\n/**\n * 获取某个项目的详情\n *\n * */\nexport const fetchProjectDetail = async ({web3, library, account, chainID, projectId}) => {\n  const params = {\n    library,\n    account,\n    chainID,\n    projectId,\n  };\n  const projectDetail =  await ProjectDetails(params);\n  const tokenInfo = await ProjectTokenInfo(params);\n  // const URIInfo = await projectURIInfo(params);\n  const StatusInfo = await ProjectStatus(params);\n  const paused = StatusInfo.paused;\n  const locked = StatusInfo.locked;\n\n  const [projectName, artist, description, website, license, dynamic] = projectDetail;\n  const [artistAddress, pricePerTokenInWei, invocations, maxInvocations, active, additionalPayee, additionalPayeePercentage] = tokenInfo;\n\n  // const [projectBaseURI, projectBaseIpfsURI, useIpfs] = URIInfo;\n  return {\n    projectName,\n    artist,\n    description,\n    website,\n    license,\n    dynamic,\n    artistAddress,\n    pricePerTokenInWei: web3.utils.fromWei(pricePerTokenInWei.toString()),\n    invocations,\n    maxInvocations,\n    active,\n    additionalPayee,\n    additionalPayeePercentage,\n    // projectBaseURI,\n    paused,\n    locked\n  };\n};\n\n/**\n *\n * 更新用户信息\n *\n *\n * */\n\nexport const fetchUpdateProfile = async(params) => {\n  const res = await baseApi({\n    method: 'POST',\n    url: `${adminUrl}/api/member/updateProfile`,\n    data: params\n  });\n\n  return res;\n};\n"],"sourceRoot":""}